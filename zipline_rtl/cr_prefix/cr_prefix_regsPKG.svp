/*************************************************************************
*
* Copyright © Microsoft Corporation. All rights reserved.
* Copyright © Broadcom Inc. All rights reserved.
* Licensed under the MIT License.
*
*************************************************************************/
`ifndef __CR_PREFIX_REGSPKG_SVP
`define __CR_PREFIX_REGSPKG_SVP
package cr_prefix_regsPKG;




typedef enum logic [1:0]
       {ENET  = 2'h0, 
	IPV4  = 2'h1, 
	IPV6  = 2'h2, 
	MPLS  = 2'h3} pkt_hdr_e;



typedef enum logic [3:0]
       {CMD_SIMPLE  = 4'h0, 
	COMPND_4K   = 4'h5, 
	COMPND_8K   = 4'h6, 
	COMPND_RSV  = 4'hf} cmd_compound_cmd_frm_size_e;



typedef enum logic 
       {GUID_NOT_PRESENT  = 1'h0, 
	GUID_PRESENT      = 1'h1} cmd_guid_present_e;



typedef enum logic 
       {CRC_NOT_PRESENT  = 1'h0, 
	CRC_PRESENT      = 1'h1} cmd_frmd_crc_in_e;



typedef enum logic [6:0]
       {CCEIP_FRMD_USER_NULL  = 7'hb, 
	CCEIP_FRMD_USER_PI16  = 7'hc, 
	CCEIP_FRMD_USER_PI64  = 7'hd, 
	CCEIP_FRMD_USER_VM    = 7'he, 
	CCEIP_TYPE_IN_RSV     = 7'h7f} cceip_cmd_frmd_in_type_e;



typedef enum logic [6:0]
       {CDDIP_FRMD_INT_APP       = 7'hf, 
	CDDIP_FRMD_INT_SIP       = 7'h10, 
	CDDIP_FRMD_INT_LIP       = 7'h11, 
	CDDIP_FRMD_INT_VM        = 7'h12, 
	CDDIP_FRMD_INT_VM_SHORT  = 7'h16, 
	CDDIP_TYPE_IN_RSV        = 7'h7f} cddip_cmd_frmd_in_type_e;



typedef enum logic [6:0]
       {CCEIP_FRMD_INT_APP       = 7'hf, 
	CCEIP_FRMD_INT_SIP       = 7'h10, 
	CCEIP_FRMD_INT_LIP       = 7'h11, 
	CCEIP_FRMD_INT_VM        = 7'h12, 
	CCEIP_FRMD_INT_VM_SHORT  = 7'h16, 
	CCEIP_TYPE_OUT_RSV       = 7'h7f} cceip_cmd_frmd_out_type_e;



typedef enum logic [6:0]
       {CDDIP_FRMD_USER_NULL  = 7'hb, 
	CDDIP_FRMD_USER_PI16  = 7'hc, 
	CDDIP_FRMD_USER_PI64  = 7'hd, 
	CDDIP_FRMD_USER_VM    = 7'he, 
	CDDIP_TYPE_OUT_RSV    = 7'h7f} cddip_cmd_frmd_out_type_e;



typedef enum logic 
       {NOT_GEN  = 1'h0, 
	GEN      = 1'h1} cmd_frmd_out_crc_e;



typedef enum logic [1:0]
       {FRMD_T10_DIX  = 2'h0, 
	FRMD_CRC64    = 2'h1, 
	FRMD_CRC64E   = 2'h2, 
	FRMD_CRC_RSV  = 2'h3} cmd_frmd_out_crc_type_e;



typedef enum logic [1:0]
       {NO_CRC         = 2'h0, 
	CRC_8B_CRC64   = 2'h1, 
	CRC_8B_CRC64E  = 2'h2, 
	MD_TYPE_RSV    = 2'h3} cmd_md_type_e;



typedef enum logic [1:0]
       {CRC_GEN_VERIFY  = 2'h0, 
	CRC_RSV1        = 2'h1, 
	CRC_RSV2        = 2'h2, 
	CRC_RSV3        = 2'h3} cmd_md_op_e;



typedef enum logic 
       {FRMD_MAC_NOP  = 1'h0, 
	FRMD_MAC_CAL  = 1'h1} cmd_frmd_raw_mac_sel_e;



typedef enum logic 
       {CHU_NORMAL  = 1'h0, 
	CHU_APPEND  = 1'h1} cmd_chu_append_e;



typedef enum logic [3:0]
       {NONE      = 4'h0, 
	ZLIB      = 4'h1, 
	GZIP      = 4'h2, 
	XP9       = 4'h3, 
	XP10      = 4'h4, 
	CHU4K     = 4'h5, 
	CHU8K     = 4'h6, 
	RSV_MODE  = 4'hf} cmd_comp_mode_e;



typedef enum logic [3:0]
       {WIN_32B  = 4'h0, 
	WIN_4K   = 4'h1, 
	WIN_8K   = 4'h2, 
	WIN_16K  = 4'h3, 
	WIN_32K  = 4'h4, 
	WIN_64K  = 4'h5, 
	RSV_WIN  = 4'hf} cmd_lz77_win_size_e;



typedef enum logic [1:0]
       {NO_MATCH  = 2'h0, 
	CHAR_1    = 2'h1, 
	CHAR_2    = 2'h2, 
	RSV_DLY   = 2'h3} cmd_lz77_dly_match_win_e;



typedef enum logic 
       {CHAR_3  = 1'h0, 
	CHAR_4  = 1'h1} cmd_lz77_min_match_len_e;



typedef enum logic [1:0]
       {LEN_LZ77_WIN  = 2'h0, 
	LEN_256B      = 2'h1, 
	MIN_MTCH_14   = 2'h2, 
	LEN_64B       = 2'h3} cmd_lz77_max_symb_len_e;



typedef enum logic [1:0]
       {NO_PREFIX      = 2'h0, 
	USER_PREFIX    = 2'h1, 
	PREDEF_PREFIX  = 2'h2, 
	PREDET_HUFF    = 2'h3} cmd_xp10_prefix_mode_e;



typedef enum logic 
       {CRC32  = 1'h0, 
	CRC64  = 1'h1} cmd_xp10_crc_mode_e;



typedef enum logic [1:0]
       {FRM          = 2'h0, 
	FRM_LESS_16  = 2'h1, 
	INF          = 2'h2, 
	RSV_THRSH    = 2'h3} cmd_chu_comp_thrsh_e;



typedef enum logic [1:0]
       {IV_NONE      = 2'h0, 
	IV_AUX_CMD   = 2'h1, 
	IV_KEYS      = 2'h2, 
	IV_AUX_FRMD  = 2'h3} cmd_iv_src_e;



typedef enum logic [1:0]
       {IV_SRC  = 2'h0, 
	IV_RND  = 2'h1, 
	IV_INC  = 2'h2, 
	IV_RSV  = 2'h3} cmd_iv_op_e;



typedef enum logic 
       {SIMPLE    = 1'h0, 
	COMPOUND  = 1'h1} rqe_frame_type_e;



typedef enum logic 
       {TRACE_OFF  = 1'h0, 
	TRACE_ON   = 1'h1} rqe_trace_e;



typedef enum logic [3:0]
       {RQE_SIMPLE          = 4'h0, 
	RQE_COMPOUND_4K     = 4'h5, 
	RQE_COMPOUND_8K     = 4'h6, 
	RQE_RSV_FRAME_SIZE  = 4'hf} rqe_frame_size_e;



typedef enum logic [1:0]
       {RAW        = 2'h1, 
	PARSEABLE  = 2'h0, 
	XP10CFH4K  = 2'h2, 
	XP10CFH8K  = 2'h3} frmd_coding_e;



typedef enum logic [1:0]
       {DIGEST_64B   = 2'h0, 
	DIGEST_128B  = 2'h1, 
	DIGEST_256B  = 2'h2, 
	DIGEST_0B    = 2'h3} frmd_mac_size_e;



typedef enum logic [1:0]
       {REP     = 2'h0, 
	PASS    = 2'h1, 
	MODIFY  = 2'h2, 
	DELETE  = 2'h3} tlv_parse_action_e;



typedef enum logic 
       {USER  = 1'h0, 
	TLVP  = 1'h1} tlvp_corrupt_e;



typedef enum logic 
       {DATAPATH_CORRUPT  = 1'h0, 
	FUNCTIONAL_ERROR  = 1'h1} cmd_type_e;



typedef enum logic [1:0]
       {SINGLE_ERR        = 2'h0, 
	CONTINUOUS_ERROR  = 2'h1, 
	STOP              = 2'h2, 
	EOT               = 2'h3} cmd_mode_e;



typedef enum logic [1:0]
       {EQ    = 2'h0, 
	GTEQ  = 2'h1, 
	LT    = 2'h2, 
	EQOP  = 2'h3} prefix_compare_type_e;



typedef enum logic [3:0]
       {NOP             = 4'h0, 
	READ            = 4'h1, 
	WRITE           = 4'h2, 
	ENABLE          = 4'h3, 
	DISABLED        = 4'h4, 
	RESET           = 4'h5, 
	INITIALIZE      = 4'h6, 
	INITIALIZE_INC  = 4'h7, 
	SET_INI_START   = 4'h8, 
	COMPARE         = 4'h9, 
	SIM_TMO         = 4'he, 
	ACK_ERROR       = 4'hf} ia_operation_e;



typedef enum logic [2:0]
       {READY  = 3'h0, 
	BUSY   = 3'h1, 
	TMO    = 3'h2, 
	OVR    = 3'h3, 
	NXM    = 3'h4, 
	UOP    = 3'h5, 
	PDN    = 3'h7} ia_status_e;



typedef enum logic [3:0]
       {SPRAM        = 4'h0, 
	SRFRAM       = 4'h1, 
	REG          = 4'h2, 
	TCAM         = 4'h3, 
	MEM_TYPE_4   = 4'h4, 
	MEM_TYPE_5   = 4'h5, 
	MEM_TYPE_6   = 4'h6, 
	MEM_TYPE_7   = 4'h7, 
	MEM_TYPE_8   = 4'h8, 
	MEM_TYPE_9   = 4'h9, 
	MEM_TYPE_10  = 4'ha, 
	MEM_TYPE_11  = 4'hb, 
	MEM_TYPE_12  = 4'hc, 
	MEM_TYPE_13  = 4'hd, 
	MEM_TYPE_14  = 4'he, 
	MEM_TYPE_15  = 4'hf} mem_type_e;



typedef enum logic [3:0]
       {NOOPO     = 4'h0, 
	HALT      = 4'h1, 
	UNLOCK    = 4'h2, 
	RELUS     = 4'h3, 
	SIGMOIDS  = 4'h4, 
	SETNCNT   = 4'h5, 
	RELUP     = 4'h6, 
	SIGMOIDP  = 4'h7, 
	LOAD      = 4'h8, 
	MAC       = 4'h9, 
	HOLD      = 4'ha} opcode_e;



typedef enum logic [9:0]
       {REVISION_CONFIG                   = 10'h0, 
	SPARE_CONFIG                      = 10'h4, 
	REGS_REC_US_CTRL                  = 10'h8, 
	REGS_REC_DEBUG_CONTROL            = 10'hc, 
	REGS_BREAKPOINT_ADDR              = 10'h10, 
	REGS_BREAKPOINT_CONT              = 10'h14, 
	REGS_BREAKPOINT_STEP              = 10'h18, 
	REC_DEBUG_STATUS                  = 10'h1c, 
	REGS_ERROR_CONTROL                = 10'h20, 
	REGS_TLV_PARSE_ACTION_0           = 10'h28, 
	REGS_TLV_PARSE_ACTION_1           = 10'h2c, 
	FEATURE_IA_CAPABILITY             = 10'h30, 
	FEATURE_IA_STATUS                 = 10'h34, 
	FEATURE_IA_WDATA_PART0            = 10'h38, 
	FEATURE_IA_WDATA_PART1            = 10'h3c, 
	FEATURE_IA_CONFIG                 = 10'h40, 
	FEATURE_IA_RDATA_PART0            = 10'h44, 
	FEATURE_IA_RDATA_PART1            = 10'h48, 
	FEATURE_CTR_IA_CAPABILITY         = 10'h4c, 
	FEATURE_CTR_IA_STATUS             = 10'h50, 
	FEATURE_CTR_IA_WDATA_PART0        = 10'h54, 
	FEATURE_CTR_IA_CONFIG             = 10'h58, 
	FEATURE_CTR_IA_RDATA_PART0        = 10'h5c, 
	RECIM_IA_CAPABILITY               = 10'h60, 
	RECIM_IA_STATUS                   = 10'h64, 
	RECIM_IA_WDATA_PART0              = 10'h68, 
	RECIM_IA_CONFIG                   = 10'h6c, 
	RECIM_IA_RDATA_PART0              = 10'h70, 
	RECSAT_IA_CAPABILITY              = 10'h74, 
	RECSAT_IA_STATUS                  = 10'h78, 
	RECSAT_IA_WDATA_PART0             = 10'h7c, 
	RECSAT_IA_WDATA_PART1             = 10'h80, 
	RECSAT_IA_WDATA_PART2             = 10'h84, 
	RECSAT_IA_WDATA_PART3             = 10'h88, 
	RECSAT_IA_WDATA_PART4             = 10'h8c, 
	RECSAT_IA_WDATA_PART5             = 10'h90, 
	RECSAT_IA_WDATA_PART6             = 10'h94, 
	RECSAT_IA_WDATA_PART7             = 10'h98, 
	RECSAT_IA_WDATA_PART8             = 10'h9c, 
	RECSAT_IA_WDATA_PART9             = 10'ha0, 
	RECSAT_IA_WDATA_PART10            = 10'ha4, 
	RECSAT_IA_WDATA_PART11            = 10'ha8, 
	RECSAT_IA_WDATA_PART12            = 10'hac, 
	RECSAT_IA_WDATA_PART13            = 10'hb0, 
	RECSAT_IA_WDATA_PART14            = 10'hb4, 
	RECSAT_IA_WDATA_PART15            = 10'hb8, 
	RECSAT_IA_WDATA_PART16            = 10'hbc, 
	RECSAT_IA_WDATA_PART17            = 10'hc0, 
	RECSAT_IA_WDATA_PART18            = 10'hc4, 
	RECSAT_IA_WDATA_PART19            = 10'hc8, 
	RECSAT_IA_WDATA_PART20            = 10'hcc, 
	RECSAT_IA_WDATA_PART21            = 10'hd0, 
	RECSAT_IA_WDATA_PART22            = 10'hd4, 
	RECSAT_IA_WDATA_PART23            = 10'hd8, 
	RECSAT_IA_WDATA_PART24            = 10'hdc, 
	RECSAT_IA_WDATA_PART25            = 10'he0, 
	RECSAT_IA_WDATA_PART26            = 10'he4, 
	RECSAT_IA_WDATA_PART27            = 10'he8, 
	RECSAT_IA_WDATA_PART28            = 10'hec, 
	RECSAT_IA_WDATA_PART29            = 10'hf0, 
	RECSAT_IA_WDATA_PART30            = 10'hf4, 
	RECSAT_IA_WDATA_PART31            = 10'hf8, 
	RECSAT_IA_CONFIG                  = 10'hfc, 
	RECSAT_IA_RDATA_PART0             = 10'h100, 
	RECSAT_IA_RDATA_PART1             = 10'h104, 
	RECSAT_IA_RDATA_PART2             = 10'h108, 
	RECSAT_IA_RDATA_PART3             = 10'h10c, 
	RECSAT_IA_RDATA_PART4             = 10'h110, 
	RECSAT_IA_RDATA_PART5             = 10'h114, 
	RECSAT_IA_RDATA_PART6             = 10'h118, 
	RECSAT_IA_RDATA_PART7             = 10'h11c, 
	RECSAT_IA_RDATA_PART8             = 10'h120, 
	RECSAT_IA_RDATA_PART9             = 10'h124, 
	RECSAT_IA_RDATA_PART10            = 10'h128, 
	RECSAT_IA_RDATA_PART11            = 10'h12c, 
	RECSAT_IA_RDATA_PART12            = 10'h130, 
	RECSAT_IA_RDATA_PART13            = 10'h134, 
	RECSAT_IA_RDATA_PART14            = 10'h138, 
	RECSAT_IA_RDATA_PART15            = 10'h13c, 
	RECSAT_IA_RDATA_PART16            = 10'h140, 
	RECSAT_IA_RDATA_PART17            = 10'h144, 
	RECSAT_IA_RDATA_PART18            = 10'h148, 
	RECSAT_IA_RDATA_PART19            = 10'h14c, 
	RECSAT_IA_RDATA_PART20            = 10'h150, 
	RECSAT_IA_RDATA_PART21            = 10'h154, 
	RECSAT_IA_RDATA_PART22            = 10'h158, 
	RECSAT_IA_RDATA_PART23            = 10'h15c, 
	RECSAT_IA_RDATA_PART24            = 10'h160, 
	RECSAT_IA_RDATA_PART25            = 10'h164, 
	RECSAT_IA_RDATA_PART26            = 10'h168, 
	RECSAT_IA_RDATA_PART27            = 10'h16c, 
	RECSAT_IA_RDATA_PART28            = 10'h170, 
	RECSAT_IA_RDATA_PART29            = 10'h174, 
	RECSAT_IA_RDATA_PART30            = 10'h178, 
	RECSAT_IA_RDATA_PART31            = 10'h17c, 
	RECCT_IA_CAPABILITY               = 10'h180, 
	RECCT_IA_STATUS                   = 10'h184, 
	RECCT_IA_WDATA_PART0              = 10'h188, 
	RECCT_IA_WDATA_PART1              = 10'h18c, 
	RECCT_IA_WDATA_PART2              = 10'h190, 
	RECCT_IA_WDATA_PART3              = 10'h194, 
	RECCT_IA_WDATA_PART4              = 10'h198, 
	RECCT_IA_WDATA_PART5              = 10'h19c, 
	RECCT_IA_WDATA_PART6              = 10'h1a0, 
	RECCT_IA_WDATA_PART7              = 10'h1a4, 
	RECCT_IA_WDATA_PART8              = 10'h1a8, 
	RECCT_IA_WDATA_PART9              = 10'h1ac, 
	RECCT_IA_WDATA_PART10             = 10'h1b0, 
	RECCT_IA_WDATA_PART11             = 10'h1b4, 
	RECCT_IA_WDATA_PART12             = 10'h1b8, 
	RECCT_IA_WDATA_PART13             = 10'h1bc, 
	RECCT_IA_WDATA_PART14             = 10'h1c0, 
	RECCT_IA_WDATA_PART15             = 10'h1c4, 
	RECCT_IA_WDATA_PART16             = 10'h1c8, 
	RECCT_IA_WDATA_PART17             = 10'h1cc, 
	RECCT_IA_WDATA_PART18             = 10'h1d0, 
	RECCT_IA_WDATA_PART19             = 10'h1d4, 
	RECCT_IA_WDATA_PART20             = 10'h1d8, 
	RECCT_IA_WDATA_PART21             = 10'h1dc, 
	RECCT_IA_WDATA_PART22             = 10'h1e0, 
	RECCT_IA_WDATA_PART23             = 10'h1e4, 
	RECCT_IA_WDATA_PART24             = 10'h1e8, 
	RECCT_IA_WDATA_PART25             = 10'h1ec, 
	RECCT_IA_WDATA_PART26             = 10'h1f0, 
	RECCT_IA_WDATA_PART27             = 10'h1f4, 
	RECCT_IA_WDATA_PART28             = 10'h1f8, 
	RECCT_IA_WDATA_PART29             = 10'h1fc, 
	RECCT_IA_WDATA_PART30             = 10'h200, 
	RECCT_IA_WDATA_PART31             = 10'h204, 
	RECCT_IA_CONFIG                   = 10'h208, 
	RECCT_IA_RDATA_PART0              = 10'h20c, 
	RECCT_IA_RDATA_PART1              = 10'h210, 
	RECCT_IA_RDATA_PART2              = 10'h214, 
	RECCT_IA_RDATA_PART3              = 10'h218, 
	RECCT_IA_RDATA_PART4              = 10'h21c, 
	RECCT_IA_RDATA_PART5              = 10'h220, 
	RECCT_IA_RDATA_PART6              = 10'h224, 
	RECCT_IA_RDATA_PART7              = 10'h228, 
	RECCT_IA_RDATA_PART8              = 10'h22c, 
	RECCT_IA_RDATA_PART9              = 10'h230, 
	RECCT_IA_RDATA_PART10             = 10'h234, 
	RECCT_IA_RDATA_PART11             = 10'h238, 
	RECCT_IA_RDATA_PART12             = 10'h23c, 
	RECCT_IA_RDATA_PART13             = 10'h240, 
	RECCT_IA_RDATA_PART14             = 10'h244, 
	RECCT_IA_RDATA_PART15             = 10'h248, 
	RECCT_IA_RDATA_PART16             = 10'h24c, 
	RECCT_IA_RDATA_PART17             = 10'h250, 
	RECCT_IA_RDATA_PART18             = 10'h254, 
	RECCT_IA_RDATA_PART19             = 10'h258, 
	RECCT_IA_RDATA_PART20             = 10'h25c, 
	RECCT_IA_RDATA_PART21             = 10'h260, 
	RECCT_IA_RDATA_PART22             = 10'h264, 
	RECCT_IA_RDATA_PART23             = 10'h268, 
	RECCT_IA_RDATA_PART24             = 10'h26c, 
	RECCT_IA_RDATA_PART25             = 10'h270, 
	RECCT_IA_RDATA_PART26             = 10'h274, 
	RECCT_IA_RDATA_PART27             = 10'h278, 
	RECCT_IA_RDATA_PART28             = 10'h27c, 
	RECCT_IA_RDATA_PART29             = 10'h280, 
	RECCT_IA_RDATA_PART30             = 10'h284, 
	RECCT_IA_RDATA_PART31             = 10'h288, 
	PSR_IA_CAPABILITY                 = 10'h28c, 
	PSR_IA_STATUS                     = 10'h290, 
	PSR_IA_WDATA_PART0                = 10'h294, 
	PSR_IA_CONFIG                     = 10'h298, 
	PSR_IA_RDATA_PART0                = 10'h29c, 
	BIMC_MONITOR                      = 10'h2a4, 
	BIMC_MONITOR_MASK                 = 10'h2a8, 
	BIMC_ECC_UNCORRECTABLE_ERROR_CNT  = 10'h2ac, 
	BIMC_ECC_CORRECTABLE_ERROR_CNT    = 10'h2b0, 
	BIMC_PARITY_ERROR_CNT             = 10'h2b4, 
	BIMC_GLOBAL_CONFIG                = 10'h2b8, 
	BIMC_MEMID                        = 10'h2bc, 
	BIMC_ECCPAR_DEBUG                 = 10'h2c0, 
	BIMC_CMD2                         = 10'h2c4, 
	BIMC_CMD1                         = 10'h2c8, 
	BIMC_CMD0                         = 10'h2cc, 
	BIMC_RXCMD2                       = 10'h2d0, 
	BIMC_RXCMD1                       = 10'h2d4, 
	BIMC_RXCMD0                       = 10'h2d8, 
	BIMC_RXRSP2                       = 10'h2dc, 
	BIMC_RXRSP1                       = 10'h2e0, 
	BIMC_RXRSP0                       = 10'h2e4, 
	BIMC_POLLRSP2                     = 10'h2e8, 
	BIMC_POLLRSP1                     = 10'h2ec, 
	BIMC_POLLRSP0                     = 10'h2f0, 
	BIMC_DBGCMD2                      = 10'h2f4, 
	BIMC_DBGCMD1                      = 10'h2f8, 
	BIMC_DBGCMD0                      = 10'h2fc} address_e;



typedef struct packed {
    logic [7:0]                    revid;                    
} revid_t;
localparam revid_t revid_t_reset 
     = {8'h0};



typedef struct packed {
    logic [31:0]                   spare;                    
} spare_t;
localparam spare_t spare_t_reset 
     = {32'h0};



typedef struct packed {
    logic [1:0]                    frmd_int_app;             
    logic [1:0]                    frmd_user_vm;             
    logic [1:0]                    frmd_user_pi64;           
    logic [1:0]                    frmd_user_pi16;           
    logic [1:0]                    frmd_user_null;           
    logic [1:0]                    guid;                     
    logic [1:0]                    cqe;                      
    logic [1:0]                    stat;                     
    logic [1:0]                    lz77;                     
    logic [1:0]                    ftr;                      
    logic [1:0]                    data_unk;                 
    logic [1:0]                    pfd;                      
    logic [1:0]                    phd;                      
    logic [1:0]                    key;                      
    logic [1:0]                    cmd;                      
    logic [1:0]                    rqe;                      
} regs_tlv_parse_action_31_0_t;
localparam regs_tlv_parse_action_31_0_t regs_tlv_parse_action_31_0_t_reset 
     = {2'h1, 
	2'h2, 
	2'h2, 
	2'h2, 
	2'h2, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h2, 
	2'h0, 
	2'h1, 
	2'h1, 
	2'h2, 
	2'h0, 
	2'h1};



typedef struct packed {
    logic [1:0]                    unused_4;                 
    logic [1:0]                    unused_3;                 
    logic [1:0]                    unused_2;                 
    logic [1:0]                    unused_1;                 
    logic [1:0]                    unused_0;                 
    logic [1:0]                    sch;                      
    logic [1:0]                    aux_cmd_guid_iv;          
    logic [1:0]                    aux_cmd_guid;             
    logic [1:0]                    aux_cmd_iv;               
    logic [1:0]                    frmd_int_vm_short;        
    logic [1:0]                    aux_cmd;                  
    logic [1:0]                    cr_iv;                    
    logic [1:0]                    data;                     
    logic [1:0]                    frmd_int_vm;              
    logic [1:0]                    frmd_int_lip;             
    logic [1:0]                    frmd_int_sip;             
} regs_tlv_parse_action_63_32_t;
localparam regs_tlv_parse_action_63_32_t regs_tlv_parse_action_63_32_t_reset 
     = {2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h1, 
	2'h0, 
	2'h1, 
	2'h1, 
	2'h1};



typedef struct packed {
    logic [30:0]                   resvd;                    
    logic                          rec_us_sw_en;             
} prefix_rec_us_ctrl_t;
localparam prefix_rec_us_ctrl_t prefix_rec_us_ctrl_t_reset 
     = {31'h0, 
	1'h0};



typedef struct packed {
    logic [30:0]                   resvd;                    
    logic                          rec_us_breakpoint_en;     
} prefix_debug_control_t;
localparam prefix_debug_control_t prefix_debug_control_t_reset 
     = {31'h0, 
	1'h0};



typedef struct packed {
    logic [23:0]                   resvd;                    
    logic [7:0]                    rec_us_break_addr;        
} prefix_breakpoint_addr_t;
localparam prefix_breakpoint_addr_t prefix_breakpoint_addr_t_reset 
     = {24'h0, 
	8'h0};



typedef struct packed {
    logic [30:0]                   resvd;                    
    logic                          rec_us_break_addr;        
} prefix_breakpoint_cont_t;
localparam prefix_breakpoint_cont_t prefix_breakpoint_cont_t_reset 
     = {31'h0, 
	1'h0};



typedef struct packed {
    logic [30:0]                   resvd;                    
    logic                          rec_us_break_addr;        
} prefix_breakpoint_step_t;
localparam prefix_breakpoint_step_t prefix_breakpoint_step_t_reset 
     = {31'h0, 
	1'h0};



typedef struct packed {
    logic [21:0]                   resvd;                    
    logic                          rec_us_break_armed;       
    logic                          rec_us_break_triggered;   
    logic [7:0]                    rec_us_pc;                
} prefix_debug_status_t;
localparam prefix_debug_status_t prefix_debug_status_t_reset 
     = {22'h0, 
	1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [30:0]                   resvd;                    
    logic                          enable_ftr_error;         
} prefix_error_control_t;
localparam prefix_error_control_t prefix_error_control_t_reset 
     = {31'h0, 
	1'h1};



typedef struct packed {
    logic [15:0]                   unused;                   
    logic                          use_prior_d;              
    logic                          no_delay_d;               
    logic [1:0]                    cmp_type_d;               
    logic                          use_prior_c;              
    logic                          no_delay_c;               
    logic [1:0]                    cmp_type_c;               
    logic                          use_prior_b;              
    logic                          no_delay_b;               
    logic [1:0]                    cmp_type_b;               
    logic                          use_prior_a;              
    logic                          no_delay_a;               
    logic [1:0]                    cmp_type_a;               
    logic [7:0]                    match_val_d;              
    logic [7:0]                    match_val_c;              
    logic [7:0]                    match_val_b;              
    logic [7:0]                    match_val_a;              
} feature_t;
localparam feature_t feature_t_reset 
     = {16'h0, 
	1'h0, 
	1'h0, 
	2'h0, 
	1'h0, 
	1'h0, 
	2'h0, 
	1'h0, 
	1'h0, 
	2'h0, 
	1'h0, 
	1'h0, 
	2'h0, 
	8'h0, 
	8'h0, 
	8'h0, 
	8'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [7:0]                    addr;                     
} feature_ia_config_t;
localparam feature_ia_config_t feature_ia_config_t_reset 
     = {4'h0, 
	8'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [7:0]                    addr;                     
} feature_ia_status_t;
localparam feature_ia_status_t feature_ia_status_t_reset 
     = {3'h0, 
	5'h1, 
	8'hff};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} feature_ia_capability_t;
localparam feature_ia_capability_t feature_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [23:0]                   rsvd;                     
    logic [7:0]                    feature_counter;          
} feature_ctr_t;
localparam feature_ctr_t feature_ctr_t_reset 
     = {24'h0, 
	8'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [7:0]                    addr;                     
} feature_ctr_ia_config_t;
localparam feature_ctr_ia_config_t feature_ctr_ia_config_t_reset 
     = {4'h0, 
	8'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [7:0]                    addr;                     
} feature_ctr_ia_status_t;
localparam feature_ctr_ia_status_t feature_ctr_ia_status_t_reset 
     = {3'h0, 
	5'h0, 
	8'hff};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} feature_ctr_ia_capability_t;
localparam feature_ctr_ia_capability_t feature_ctr_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [1:0]                    rsvd;                     
    logic [3:0]                    opcode;                   
    logic [7:0]                    src1;                     
    logic [7:0]                    src2;                     
    logic                          src3;                     
    logic                          src4;                     
} rec_inst_t;
localparam rec_inst_t rec_inst_t_reset 
     = {2'h0, 
	4'h0, 
	8'h0, 
	8'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [7:0]                    addr;                     
} recim_ia_config_t;
localparam recim_ia_config_t recim_ia_config_t_reset 
     = {4'h0, 
	8'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [7:0]                    addr;                     
} recim_ia_status_t;
localparam recim_ia_status_t recim_ia_status_t_reset 
     = {3'h1, 
	5'h0, 
	8'hff};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} recim_ia_capability_t;
localparam recim_ia_capability_t recim_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [31:0]                   sat_entry_part31;         
    logic [31:0]                   sat_entry_part30;         
    logic [31:0]                   sat_entry_part29;         
    logic [31:0]                   sat_entry_part28;         
    logic [31:0]                   sat_entry_part27;         
    logic [31:0]                   sat_entry_part26;         
    logic [31:0]                   sat_entry_part25;         
    logic [31:0]                   sat_entry_part24;         
    logic [31:0]                   sat_entry_part23;         
    logic [31:0]                   sat_entry_part22;         
    logic [31:0]                   sat_entry_part21;         
    logic [31:0]                   sat_entry_part20;         
    logic [31:0]                   sat_entry_part19;         
    logic [31:0]                   sat_entry_part18;         
    logic [31:0]                   sat_entry_part17;         
    logic [31:0]                   sat_entry_part16;         
    logic [31:0]                   sat_entry_part15;         
    logic [31:0]                   sat_entry_part14;         
    logic [31:0]                   sat_entry_part13;         
    logic [31:0]                   sat_entry_part12;         
    logic [31:0]                   sat_entry_part11;         
    logic [31:0]                   sat_entry_part10;         
    logic [31:0]                   sat_entry_part9;          
    logic [31:0]                   sat_entry_part8;          
    logic [31:0]                   sat_entry_part7;          
    logic [31:0]                   sat_entry_part6;          
    logic [31:0]                   sat_entry_part5;          
    logic [31:0]                   sat_entry_part4;          
    logic [31:0]                   sat_entry_part3;          
    logic [31:0]                   sat_entry_part2;          
    logic [31:0]                   sat_entry_part1;          
    logic [31:0]                   sat_entry_part0;          
} rec_sat_t;
localparam rec_sat_t rec_sat_t_reset 
     = {32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [6:0]                    addr;                     
} recsat_ia_config_t;
localparam recsat_ia_config_t recsat_ia_config_t_reset 
     = {4'h0, 
	7'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [6:0]                    addr;                     
} recsat_ia_status_t;
localparam recsat_ia_status_t recsat_ia_status_t_reset 
     = {3'h1, 
	5'h0, 
	7'h7f};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} recsat_ia_capability_t;
localparam recsat_ia_capability_t recsat_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [31:0]                   ct_entry_part31;          
    logic [31:0]                   ct_entry_part30;          
    logic [31:0]                   ct_entry_part29;          
    logic [31:0]                   ct_entry_part28;          
    logic [31:0]                   ct_entry_part27;          
    logic [31:0]                   ct_entry_part26;          
    logic [31:0]                   ct_entry_part25;          
    logic [31:0]                   ct_entry_part24;          
    logic [31:0]                   ct_entry_part23;          
    logic [31:0]                   ct_entry_part22;          
    logic [31:0]                   ct_entry_part21;          
    logic [31:0]                   ct_entry_part20;          
    logic [31:0]                   ct_entry_part19;          
    logic [31:0]                   ct_entry_part18;          
    logic [31:0]                   ct_entry_part17;          
    logic [31:0]                   ct_entry_part16;          
    logic [31:0]                   ct_entry_part15;          
    logic [31:0]                   ct_entry_part14;          
    logic [31:0]                   ct_entry_part13;          
    logic [31:0]                   ct_entry_part12;          
    logic [31:0]                   ct_entry_part11;          
    logic [31:0]                   ct_entry_part10;          
    logic [31:0]                   ct_entry_part9;           
    logic [31:0]                   ct_entry_part8;           
    logic [31:0]                   ct_entry_part7;           
    logic [31:0]                   ct_entry_part6;           
    logic [31:0]                   ct_entry_part5;           
    logic [31:0]                   ct_entry_part4;           
    logic [31:0]                   ct_entry_part3;           
    logic [31:0]                   ct_entry_part2;           
    logic [31:0]                   ct_entry_part1;           
    logic [31:0]                   ct_entry_part0;           
} rec_ct_t;
localparam rec_ct_t rec_ct_t_reset 
     = {32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0, 
	32'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [6:0]                    addr;                     
} recct_ia_config_t;
localparam recct_ia_config_t recct_ia_config_t_reset 
     = {4'h0, 
	7'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [6:0]                    addr;                     
} recct_ia_status_t;
localparam recct_ia_status_t recct_ia_status_t_reset 
     = {3'h1, 
	5'h0, 
	7'h7f};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} recct_ia_capability_t;
localparam recct_ia_capability_t recct_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [31:0]                   rec_psr;                  
} psr_t;
localparam psr_t psr_t_reset 
     = {32'h0};



typedef struct packed {
    logic [3:0]                    op;                       
    logic [8:0]                    addr;                     
} psr_ia_config_t;
localparam psr_ia_config_t psr_ia_config_t_reset 
     = {4'h0, 
	9'h0};



typedef struct packed {
    logic [2:0]                    code;                     
    logic [4:0]                    datawords;                
    logic [8:0]                    addr;                     
} psr_ia_status_t;
localparam psr_ia_status_t psr_ia_status_t_reset 
     = {3'h0, 
	5'h0, 
	9'h1aa};



typedef struct packed {
    logic [3:0]                    mem_type;                 
    logic                          ack_error;                
    logic                          sim_tmo;                  
    logic [3:0]                    reserved_op;              
    logic                          compare;                  
    logic                          set_init_start;           
    logic                          initialize_inc;           
    logic                          initialize;               
    logic                          reset;                    
    logic                          disabled;                 
    logic                          enable;                   
    logic                          write;                    
    logic                          read;                     
    logic                          nop;                      
} psr_ia_capability_t;
localparam psr_ia_capability_t psr_ia_capability_t_reset 
     = {4'h0, 
	1'h0, 
	1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic                          unanswered_read;          
    logic                          rcv_invalid_opcode;       
    logic                          bimc_chain_rcv_error;     
    logic                          reserve;                  
    logic                          parity_error;             
    logic                          correctable_ecc_error;    
    logic                          uncorrectable_ecc_error;  
} bimc_monitor_t;
localparam bimc_monitor_t bimc_monitor_t_reset 
     = {1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic                          unanswered_read;          
    logic                          rcv_invalid_opcode;       
    logic                          bimc_chain_rcv_error_enable;
    logic                          reserve;                  
    logic                          parity_error_enable;      
    logic                          correctable_ecc_error_enable;
    logic                          uncorrectable_ecc_error_enable;
} bimc_monitor_mask_t;
localparam bimc_monitor_mask_t bimc_monitor_mask_t_reset 
     = {1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0};



typedef struct packed {
    logic [31:0]                   uncorrectable_ecc;        
} bimc_ecc_uncorrectable_error_cnt_t;
localparam bimc_ecc_uncorrectable_error_cnt_t bimc_ecc_uncorrectable_error_cnt_t_reset 
     = {32'h0};



typedef struct packed {
    logic [31:0]                   correctable_ecc;          
} bimc_ecc_correctable_error_cnt_t;
localparam bimc_ecc_correctable_error_cnt_t bimc_ecc_correctable_error_cnt_t_reset 
     = {32'h0};



typedef struct packed {
    logic [31:0]                   parity_errors;            
} bimc_parity_error_cnt_t;
localparam bimc_parity_error_cnt_t bimc_parity_error_cnt_t_reset 
     = {32'h0};



typedef struct packed {
    logic [25:0]                   poll_ecc_par_timer;       
    logic                          debug_write_en;           
    logic                          poll_ecc_par_error;       
    logic                          mem_wr_init;              
    logic                          bimc_mem_init_done;       
    logic                          reserve;                  
    logic                          soft_reset;               
} bimc_global_config_t;
localparam bimc_global_config_t bimc_global_config_t_reset 
     = {26'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h0, 
	1'h1};



typedef struct packed {
    logic [11:0]                   max_memid;                
} bimc_memid_t;
localparam bimc_memid_t bimc_memid_t_reset 
     = {12'h0};



typedef struct packed {
    logic                          ack;                      
    logic [3:0]                    jabber_off;               
    logic                          sent;                     
    logic                          send;                     
    logic [1:0]                    eccpar_disable;           
    logic [1:0]                    reserve;                  
    logic [1:0]                    eccpar_corrupt;           
    logic [3:0]                    memtype;                  
    logic [11:0]                   memaddr;                  
} bimc_eccpar_debug_t;
localparam bimc_eccpar_debug_t bimc_eccpar_debug_t_reset 
     = {1'h0, 
	4'h0, 
	1'h0, 
	1'h0, 
	2'h0, 
	2'h0, 
	2'h0, 
	4'h0, 
	12'h0};



typedef struct packed {
    logic                          ack;                      
    logic                          sent;                     
    logic                          send;                     
    logic [7:0]                    opcode;                   
} bimc_cmd2_t;
localparam bimc_cmd2_t bimc_cmd2_t_reset 
     = {1'h0, 
	1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [3:0]                    memtype;                  
    logic [11:0]                   mem;                      
    logic [15:0]                   addr;                     
} bimc_cmd1_t;
localparam bimc_cmd1_t bimc_cmd1_t_reset 
     = {4'h0, 
	12'h0, 
	16'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_cmd0_t;
localparam bimc_cmd0_t bimc_cmd0_t_reset 
     = {32'h0};



typedef struct packed {
    logic                          ack;                      
    logic                          rxflag;                   
    logic [7:0]                    opcode;                   
} bimc_rxcmd2_t;
localparam bimc_rxcmd2_t bimc_rxcmd2_t_reset 
     = {1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [3:0]                    memtype;                  
    logic [11:0]                   mem;                      
    logic [15:0]                   addr;                     
} bimc_rxcmd1_t;
localparam bimc_rxcmd1_t bimc_rxcmd1_t_reset 
     = {4'h0, 
	12'h0, 
	16'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_rxcmd0_t;
localparam bimc_rxcmd0_t bimc_rxcmd0_t_reset 
     = {32'h0};



typedef struct packed {
    logic                          ack;                      
    logic                          rxflag;                   
    logic [7:0]                    data;                     
} bimc_rxrsp2_t;
localparam bimc_rxrsp2_t bimc_rxrsp2_t_reset 
     = {1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_rxrsp1_t;
localparam bimc_rxrsp1_t bimc_rxrsp1_t_reset 
     = {32'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_rxrsp0_t;
localparam bimc_rxrsp0_t bimc_rxrsp0_t_reset 
     = {32'h0};



typedef struct packed {
    logic                          ack;                      
    logic                          rxflag;                   
    logic [7:0]                    data;                     
} bimc_pollrsp2_t;
localparam bimc_pollrsp2_t bimc_pollrsp2_t_reset 
     = {1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_pollrsp1_t;
localparam bimc_pollrsp1_t bimc_pollrsp1_t_reset 
     = {32'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_pollrsp0_t;
localparam bimc_pollrsp0_t bimc_pollrsp0_t_reset 
     = {32'h0};



typedef struct packed {
    logic                          ack;                      
    logic                          rxflag;                   
    logic [7:0]                    opcode;                   
} bimc_dbgcmd2_t;
localparam bimc_dbgcmd2_t bimc_dbgcmd2_t_reset 
     = {1'h0, 
	1'h0, 
	8'h0};



typedef struct packed {
    logic [3:0]                    memtype;                  
    logic [11:0]                   mem;                      
    logic [15:0]                   addr;                     
} bimc_dbgcmd1_t;
localparam bimc_dbgcmd1_t bimc_dbgcmd1_t_reset 
     = {4'h0, 
	12'h0, 
	16'h0};



typedef struct packed {
    logic [31:0]                   data;                     
} bimc_dbgcmd0_t;
localparam bimc_dbgcmd0_t bimc_dbgcmd0_t_reset 
     = {32'h0};
endpackage : cr_prefix_regsPKG

`endif 
